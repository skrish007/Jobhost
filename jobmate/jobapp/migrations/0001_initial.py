# Generated by Django 4.1.12 on 2023-11-05 18:39

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('role', models.CharField(choices=[('jobprovider', 'Job Provider'), ('jobseeker', 'Job Seeker'), ('admin', 'Admin')], default='jobseeker', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job_Providers',
            fields=[
                ('pro_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cname', models.CharField(max_length=50, verbose_name='Name')),
                ('ceoname', models.CharField(max_length=50, verbose_name='CEO Name')),
                ('caddress', models.CharField(max_length=150, verbose_name='Company Address')),
                ('ctype', models.CharField(max_length=25, verbose_name='Company Type')),
                ('otherctype', models.CharField(blank=True, max_length=25, null=True, verbose_name='Other Company Type')),
                ('cdescription', models.CharField(max_length=500, verbose_name='Company Description')),
                ('cphone', models.CharField(max_length=10, verbose_name='Company Phone Number')),
                ('website', models.CharField(max_length=100, verbose_name='Company Website')),
                ('empno', models.IntegerField(verbose_name='No Of Employees')),
                ('fyear', models.DateField(verbose_name='Founded Date')),
                ('logo', models.ImageField(upload_to='provider/logo', verbose_name='Company Logo in jpg/png Format')),
                ('clicense', models.CharField(max_length=100, verbose_name='License number')),
                ('licensefile', models.FileField(upload_to='provider/license/', verbose_name='Company Licence in pdf Format')),
                ('status', models.CharField(default='Not Verified', max_length=20, verbose_name='Current Status')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verification Status')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('jobapp.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PostJob',
            fields=[
                ('job_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time'), ('Contract', 'Contract')], default='Full-Time', max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('minexp', models.CharField(default='Fresher', max_length=10)),
                ('status', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('salary', models.TextField(default='NOT DISCLOSED')),
                ('deadline', models.DateField(null=True)),
                ('mode', models.CharField(choices=[('Online', 'Online'), ('Offline', 'Offline'), ('Both', 'Both')], default='Online', max_length=10)),
                ('pro_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_jobs', to='jobapp.job_providers')),
            ],
        ),
        migrations.CreateModel(
            name='Job_Seekers',
            fields=[
                ('seeker_id', models.AutoField(primary_key=True, serialize=False)),
                ('dob', models.DateField(default=datetime.date.today, verbose_name='Date of Birth')),
                ('loc', models.CharField(max_length=50, verbose_name='Location')),
                ('phone', models.CharField(max_length=10, verbose_name='Phone No')),
                ('qual', models.CharField(max_length=25, verbose_name='Qualification')),
                ('oqual', models.CharField(max_length=25, verbose_name='Other Qualification')),
                ('exp', models.CharField(max_length=25, verbose_name='Work Experience')),
                ('skills', models.CharField(max_length=150, verbose_name='Skills')),
                ('resume', models.FileField(default=0, max_length=254, upload_to='seeker/resume/', verbose_name='Upload Resume')),
                ('aadhaar', models.CharField(max_length=25, verbose_name='Aadhaar No')),
                ('pro_pic', models.FileField(default=0, max_length=254, upload_to='seeker/images/', verbose_name='Upload Photos')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('not-specified', 'Prefer not to say')], default='not-specified', max_length=20, verbose_name='Gender')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
